########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
    "Coalescent.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

$I=random(0,8,1); ## We have 9 stored population 
$population=4;

@Sub=(); @Keys;

## We choose two sequences from that population
($name,%SubPop)=&pick_population($I,4); 

$simulation=0;$real=1;
%Counts;
($len,$Population,@SEQ)=&Data($simulation,$real,%SubPop);
($An,$Bn, $E1, $E2)=&CalculateConstants($Population);
&Count_perSite($len,@SEQ); 
 
$an=Compute("$An");

foreach $key (keys %SubPop){
        $Keys[$k]=$key;
        $Sub[$k]=$SubPop{$key};
        $k++;}

$start=random(1,80,1);
$end=random($start+100,250);

@array1=split("",$Sub[0]);
@array2=split("",$Sub[1]);
@array3=split("",$Sub[2]);
@array4=split("",$Sub[3]);


## Now lets color bold if two aminoacids are different
## Need to see how to pass here for reference
#$seq1,$seq2,$show1,$show2=show_diferences($start,$end,\@array1,\@array2);
#$seq1,$seq2,$show1,$show2=show_diferences($start,$end,@array1,@array2);

my $display=0;
for ($k=$start;$k<$end;$k++){
      $display++;
      $amino1= $array1[$k]; ## Here we retrieve the sequences from start to end
      $amino2= $array2[$k];
      $amino3= $array3[$k]; ## Here we retrieve the sequences from start to end
      $amino4= $array4[$k];

       $seq1.=$amino1; ## we concatenate
       $seq2.=$amino2;
       $seq3.=$amino3; ## we concatenate
       $seq4.=$amino4;
  
      if(($amino1 ne $amino2)or ($amino1 ne $amino3)or ($amino1 ne $amino4)or
        ($amino2 ne $amino3)or ($amino2 ne $amino4)or ($amino3 ne $amino4)){
           $amino1= "$BBOLD".$amino1."$EBOLD";
           $amino2= "$BBOLD".$amino2."$EBOLD";  ## we colored them
           $amino3= "$BBOLD".$amino3."$EBOLD";
           $amino4= "$BBOLD".$amino4."$EBOLD";  ## we colored them

           }

          if($display%50==0){
           $amino1= $amino1."$BR";
           $amino2= $amino2."$BR";  ## we colored them
           $amino3= $amino3."$BR";
           $amino4= $amino4."$BR";  ## we colored them
           }


       $show1.=$amino1; ## we concatenate
       $show2.=$amino2;
       $show3.=$amino3; ## we concatenate
       $show4.=$amino4;
     }

## Following quatities needs to be here, after $seq1, $seq2 are calculated
$new=$end - $start;

$proportion=&proportion($seq1,$seq2);

####################################################################
## Answers
$Site=&sites($new, $start, $end, $Population,~~%SubPop); ## Calculates Segregation Sites
$Sites=Compute("$Site");
$Waterson=Compute("$Site/$an");

 $shaved{1}=$seq1;
 $shaved{2}=$seq2;
 $shaved{3}=$seq3;
 $shaved{4}=$seq4;

$Pi_tajima=&tajima($Population,~~%shaved); ## Calculates Pi tajima
$tajima=Compute("$Pi_tajima");

$D= &D_Tajima($tajima,$Waterson,$Site,$E1,$E2);		

#Answers ## text for explain the solution
$answer="";
for ($i=1;$i<$population-1;$i++){$answer.="\frac{1}{$i}+";}
$answer.="\frac{1}{$population-1}";

##############################################################
##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT
Given a population decide if the neutral model it is enough to explain its variation, and this is, look if the coalescent theory adjust well to the data by applying the Tajima test. $PAR 

First estimate \(\theta\), the population mutation rate, using Waterson-estimator given by: Waterson  \(  \hatθ_W=\frac{S_n}{a_n}\) 
where \(a_n =\sum_{i=1}^{n−1}\frac{1}{i}\) $BR
Waterson = \{$Waterson->ans_rule\} $PAR
Second calculate the \(\hat \pi\) estimator $BR
\(\hat\pi\) = \{$tajima->ans_rule\} $PAR

Finally calculate the \(D\) from Tajima-test $BR
\(D\) = \{$D->ans_rule\} and conclude $PAR

Data $PAR
Your population consists of hypervariable mitochondrial loop of human mexican population $name.  Now find segregation sites \(S_n\), the total number of sites in wich a mutation has happened in at least some individual of the population . Data are given below.
$PAR
Coordinates [$start-$end] of an alignment of the mithocondrial region $BR 
>$Keys[0]$BR 
$show1 $BR
>$Keys[1]$BR 
$show2 $BR
>$Keys[2]$BR 
$show3 $BR
>$Keys[3]$BR 
$show4 $BR

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS($Waterson->cmp);
ANS($tajima->with(tolerance=>.0001)->cmp);
ANS($D->with(tolerance=>.001)->cmp);

$D1=Compute("($tajima-$Waterson)/($E1*$Site + $E2*$Site*($Site-1))^(1/2)");

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

Using population size you have that n=$population $BR
Then, you only have to substitute n on the formulas below, for example $BR
 \(a_n =\sum_{i=1}^{n−1}\frac{1}{i}\) $BR
\(a_n=$answer\) $BR
So, by doing this, you will get: $BR
\(a_n=$an\)$BR

The correct answer for Segregation Sites is $Sites because it is the number of sites with differences between all the sequences $PAR
The Waterson estimator is given by \(\frac{$Sites}{$an} = $Waterson\)
The \(\hat\pi\) is given by \($tajima\)

Using the variables \(\hat\pi=\) $tajima, \(W=\)$Waterson, \(s_n=\)$Site, \(e_1=\)$E1, \(e_2=\)$E2
and the definition \(D=\frac{\hat\pi-\hat\theta_W}{\sqrt{e_1S_n+e_2S_n(S_n-1)}}\) $BR
\(D=\frac{$tajima-$Waterson}{\sqrt{($E1 )($Site) + ($E2)($Site) ($Site-1)}}\) $PAR

then \( D= $D\)

END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();        
