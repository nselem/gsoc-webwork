##DESCRIPTION
## This is a problem of non homogeneous partial differential  equations. 
## ENDDESCRIPTION

##KEYWORDS('partial', 'differential', 'equation')

## DBsubject('Partial Differential Equations')
## DBchapter('Boundary Problems')
## DBsection('Orthogonal series')
## Date()
## Author('Nelly Selem')
## Institution('LANGEBIO CINVESTAV')
## TitleText1('Differential equations with boundary value problems')
## EditionText1('6')
## AuthorText1('Dennis Zill,Michael R. Cullen ')
## Section1('12.6')

##DESCRIPTION
## Este es un problema que involucra una ecuación parcial no homogénea.
## ENDDESCRIPTION

##KEYWORDS('parcial', 'diferencial', 'ecuacion')

## DBsubject('Ecuaciones Diferenciales Parciales')
## DBchapter('Problemas con valores en la frontera')
## DBsection('Series Ortogonales')
## Date()
## Author('Nelly Selem')
## Institution('LANGEBIO CINVESTAV')
## TitleText1('Ecuaciones Diferenciales con problemas con valores en la 
## frontera')
## EditionText1('6')
## AuthorText1('Dennis Zill,Michael R. Cullen ')
## Section1('12.6')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);


###############################################################################
#   Notation Help Window Code
#   Código para la Ventana de ayuda para la notación
###############################################################################

############################################################################
#
# Print problem number and point value (weight) for the problem
   TEXT(beginproblem());
# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;
##########################################################################
#  Setup
#  Contexto / Variables
###########################################
Context()->variables->add(y=>'Real',an=>'Real');

            # Parameters/conditions
            #Parámetros y condiciones iniciales y de frontera.
$a=random(10,20,1); $b=random(1,5,1); 
$h=random(1,5,1);  $f=Compute("$a x");               
            
            # Soluciones /solutions
$X_n=Compute("sin(an*x)"); $Y_n=Compute("sinh(an*y)");
$B1=Compute("(4*$a)/(sinh($b*an)*an)");
$B2=Compute("$a*an*cos($a*an)-sin($a*an)");
$B3=Compute("sin(2*$a*an)-2*$a*an");
$A_n=Compute("$B1*$B2/$B3");
#####################################

$epsilon=1/random(100,1000,1);
$Error=.0001;

for($n=1;$n<=3;$n++){
$min=Compute("(2*$n-1)*pi/(2*$a)")+$epsilon;
$max=Compute("(2*$n+1)*pi/(2*$a)")-$epsilon;

$fm=tan($a*$min)/$min+1/$h;
$fM=tan($a*$max)/$max+1/$h;


while($fm*$fM>0)
{
$epsilon=1/random(100,1000,1);
$min=Compute("(2*$n+1)*pi/$a")+$epsilon;
$max=Compute("(2*$n+3)*pi/$a")-$epsilon;
$fm=tan($a*$min)/$min+1/$h;
$fM=tan($a*$max)/$max+1/$h;
}

$Iteraciones=round(ln(abs(($max-$min)/$Error))/ln(2));

for($i=1;$i<=100;$i++)
{ $medio=($max+$min)/2;
 $fm=tan($a*$min)/$min+1/$h; 
 $fmedio=tan($a*$medio)/$medio+1/$h;
 
 if(($fm)*($fmedio)<0)
    {$max=$medio;} 
 else 
     {$min=$medio;}
}

$fm=tan($a*$min)/$min+1/$h;
$fmedio=tan($a*$medio)/$medio+1/$h;
$fM=tan($a*$max)/$max+1/$h;

$coef[$n]=Compute("$medio"); ##Aproximación al primer alpha que da f(alpha)=0
$m[$n]=$fmedio;

#### Revisar A_n
$A[$n]=Compute("
((-4*$a)/(sinh($b*$coef[$n])*$coef[$n]))*((sin($a*$coef[$n])-$a*$coef[$n]*cos($a*$coef[$n]))
/(sin(2*$a*$coef[$n])-2*$a*$coef[$n]))");

}	

$u1=Formula("$A[1]*sin($coef[1]*x)*sinh($coef[1]*y)");
$u2=Formula("$u1+$A[2]*sin($coef[2]*x)*sinh($coef[2]*y)");
$u3=Formula("$u2+$A[3]*sin($coef[3]*x)*sinh($coef[3]*y)");


$A_n->{test_points} = [[1,1,1],[2,2,2],
                     [3,3,3],[4,4,4],[5,5,5]];
$u1->{test_points} = [[1,1,1],[2,2,2],
                     [3,3,3],[4,4,4],[5,5,5]];
$u2->{test_points} = [[1,1,1],[2,2,2],
                     [3,3,3],[4,4,4],[5,5,5]];
$u3->{test_points} = [[1,1,1],[2,2,2],
                     [3,3,3],[4,4,4],[5,5,5]];

##########################################################
# Codigo para probar el programa imprimiendo los resultados de la subrutina 
# a $a h $h $PAR Error $Error  Epsilon $epsilon
#  Iteraciones $Iteraciones $PAR
#  Minimo $min f(min) $fm $PAR
#  Medio $medio f(medio) $fmedio->Tex() $PAR
#  Maximo $max f(max) $fM $PAR
#  a1 =$coef[1] a2 =$coef[2] a3 =$coef[3] $PAR
#  m1 =$m[1] m2 =$m[2] m3 =$m[3] $PAR
#
#
#
#
##############################################################
#
#  Text
#
Context()->texStrings;
BEGIN_TEXT
Solve the following problem with boundary values by applying your knowledge on orthogonal series.
$BR Equation \( \frac{\partial^2 u}{\partial x^2}+\frac{\partial^2 u}{\partial y^2} =0\)  
$BR Boundary conditions: 
$BR \(u(0,y)=0\)   ,    \(\left \frac{\partial u}{\partial x} \right |_{x=$a}=-$h\times u($a,y)\) , for \(0<y<$b\).

$BR Initial conditions
$BR \(u(x,0)=0\),  \(u(x,$b)=$f\) , for \(0<x<$a\). $BR

$BR $BBOLD General solution $EBOLD $BR
Write down your solution in the form: \(u(x,y)=\sum_{n=1}^\infty  A_n X_n(x)\times Y_n(y)\) $BR

\(u(x,y)=\sum_{n=1}^\infty  A_n\) \{ ans_rule(10) \} \(\times\)\{ ans_rule(10) \}. $BR

Where \(A_n=\)\{ ans_rule(25) \} $PAR

$BR $BBOLD Numerical evaluation $EBOLD

$PAR Eigenvalues:
$BR Make use of the bisector numerical method in the interval \([\frac{(2n-1) \pi}{2*$a},\frac{(2n+1) \pi}{2*$a}]\) to find out the zeroes of the function \(G(\alpha_n)=\frac{tan(\alpha_n $a)}{\alpha_n}+\frac{1}{$h}\) and calculate the eigenvalues of this problem. A tolerance of .01 is allowed. $BR
$BR Particulary, if \(n=1\) then \(\alpha_1\)=\{ ans_rule(7) \}.
$BR Particulary, if \(n=2\) then \(\alpha_2\)=\{ ans_rule(7) \}.
$BR Particulary, if \(n=3\) then \(\alpha_3\)=\{ ans_rule(7) \}. $PAR



With your approximation of \(\alpha_1\) determine \(A_1\). $BR
\(A_1\)=\{ ans_rule(55) \} $PAR

The first term of the sum is approximately:
$BR \(u_1(x,y)\approx\)\{ ans_rule(65) \}

$BR A better approximation to \(u(x,t)\) is \(u_1+u_2+u_3\), that is $BR 
\(u(x,t)\approx\sum_{n=1}^3 u_n=\)\{ ans_rule(65) \}
END_TEXT
BEGIN_TEXT_ES
Resuelve el siguiente problema con valores en la frontera (PVF) aplicando tus conocimientos de series ortogonales.
$BR Ecuación \( \frac{\partial^2 u}{\partial x^2}+\frac{\partial^2 u}{\partial y^2} =0\)  
$BR Condiciones de frontera: 
$BR \(u(0,y)=0\)   ,    \(\left \frac{\partial u}{\partial x} \right |_{x=$a}=-$h\times u($a,y)\) , para \(0<y<$b\).

$BR Condiciones iniciales
$BR \(u(x,0)=0\),  \(u(x,$b)=$f\) , para \(0<x<$a\). $BR

$BR $BBOLD Solución general $EBOLD $BR
Escribe tu solución en la forma: \(u(x,y)=\sum_{n=1}^\infty  A_n X_n(x)\times Y_n(y)\) $BR

\(u(x,y)=\sum_{n=1}^\infty  A_n\) \{ ans_rule(10) \} \(\times\)\{ ans_rule(10) \}. $BR

Donde \(A_n=\)\{ ans_rule(25) \} $PAR

$BR $BBOLD Evaluación numérica $EBOLD

$PAR Valores Propios:
$BR Utiliza el método numérico de la bisectriz, en el intervalo \([\frac{(2n-1) \pi}{2*$a},\frac{(2n+1) \pi}{2*$a}]\) para obtener los ceros de la función \(G(\alpha_n)=\frac{tan(\alpha_n $a)}{\alpha_n}+\frac{1}{$h}\) y calcula los valores propios de este problema. Tienes una tolerancia numérica de .01. $BR
$BR En particular si \(n=1\) entonces \(\alpha_1\)=\{ ans_rule(7) \}.
$BR En particular si \(n=2\) entonces \(\alpha_2\)=\{ ans_rule(7) \}.
$BR En particular si \(n=3\) entonces \(\alpha_3\)=\{ ans_rule(7) \}. $PAR



Con tu aproximaxion de \(\alpha_1\) determina \(A_1\). $BR
\(A_1\)=\{ ans_rule(55) \} $PAR

Asi que el primer término de la sumatoria es aproximadamente:
$BR \(u_1(x,y)\approx\)\{ ans_rule(65) \}

$BR Una mejor aproximación a \(u(x,t)\) es \(u_1+u_2+u_3\), es decir $BR 
\(u(x,t)\approx\sum_{n=1}^3 u_n=\)\{ ans_rule(65) \}
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#
ANS($X_n->cmp());
ANS($Y_n->cmp());
ANS($A_n->cmp());

ANS( $coef[1]->cmp(tolType=>'absolute',
               tolerance=>.01) );
ANS( $coef[2]->cmp(tolType=>'absolute',
               tolerance=>.01) );
ANS( $coef[3]->cmp(tolType=>'absolute',
               tolerance=>.01) );

ANS( $A[1]->cmp(tolType=>'absolute',
               tolerance=>.1) );
ANS($u1->cmp());
ANS($u3->cmp());

ENDDOCUMENT();        
