## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Inner products)
## DBsection(Projection and distance)
## Institution('TCNJ')
## KEYWORDS('inner product' 'orthogonal' 'projection' 'subspace' 'distance')
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('8.2')
## Problem1('')
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl"
);

loadMacros( "PGstandard.pl", "MathObjects.pl","PGchoicemacros.pl","PGgraphmacros.pl",
"unionTables.pl","parserPopUp.pl",   "In_test.pl");



TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


DOCUMENT();      

##############################################################
#
#  Setup
#
#
Context("Numeric");

$k=random(1,19,1); ## Chose one from 20 possible aminoacids
$aminoacid=&Amino($k);
$fig=image("$aminoacid.png",width=>200,height=>200,tex_size=>450);

@perm = shuffle(20);

@Aminos;
for ($i=0;$i<20;$i++){
if ($i!=$k){
    $Amino[$perm[$i]]=&Amino($perm[$i]);
    }
else{
    $Amino[$perm[$i]]=$aminoacid;
   }
}

$popup = PopUp(["?","$Amino[$perm[0]]","$Amino[$perm[1]]","$Amino[$perm[2]]","$Amino[$perm[3]]","$Amino[$perm[4]]","$Amino[$perm[5]]","$Amino[$perm[6]]","$Amino[$perm[7]]","$Amino[$perm[8]]","$Amino[$perm[9]]","$Amino[$perm[10]]","$Amino[$perm[11]]","$Amino[$perm[12]]","$Amino[$perm[13]]","$Amino[$perm[14]]","$Amino[$perm[15]]","$Amino[$perm[17]]","$Amino[$perm[18]]","$Amino[$perm[19]]"], $aminoacid);

BEGIN_TEXT
$BCENTER
$PAR
Select from the menu which aminoacid corresponds to the structure below. 
$BR $BR \{ $popup->menu() \} $BR
$fig $PAR

$ECENTER
END_TEXT

Context()->texStrings;
install_problem_grader(~~&std_problem_grader);
$showPartialCorrectAnswers = 0;

ANS( $popup->cmp() );

Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:${PAR}
The graph is the structure of the aminoacid $aminoacid $BR
END_SOLUTION
Context()->normalStrings;


$x1 = non_zero_random(-7,7,1);
$y1 = random(-6,6,2);
$x2 = non_zero_random(-6,6,2);
$y2 = non_zero_random(-7,7,1);
$x3 = non_zero_random(-2,2,1);
$y3 = - ($x1 * $y1 + $x2 * $y2) / $x3;

$v1 = random(-10,10,1);
$v2 = random(-10,10,1);
$v3 = random(-10,10,1);

$vx = $v1 * $x1 + $v2 * $x2 + $v3 * $x3;
$norm2x = $x1 * $x1 + $x2 * $x2 + $x3 * $x3; 
$projvx = $vx/$norm2x; 

$vy = $v1 * $y1 + $v2 * $y2 + $v3 * $y3;
$norm2y = $y1 * $y1 + $y2 * $y2 + $y3 * $y3; 
$projvy = $vy/$norm2y;

$ans1 = $projvx * $x1 + $projvy * $y1;
$ans2 = $projvx * $x2 + $projvy * $y2;  
$ans3 = $projvx * $x3 + $projvy * $y3;
$ans4 = $v1 - $ans1;
$ans5 = $v2 - $ans2;
$ans6 = $v3 - $ans3;

$dist = sqrt($ans4**2+$ans5**2+$ans6**2);

BEGIN_TEXT

\{ mbox('Let \(y=\)', display_matrix([[$v1], [$v2], [$v3]]), ', \(u_{1}=\)', display_matrix([[$x1], [$x2], [$x3]]), ', \(u_{2}=\)', display_matrix([[$y1], [$y2], [$y3]]), '.' ) \} 
Compute the distance \(d\) from \(y\) to the plane in \( {\mathbb R}^3 \) spanned by  \(u_{1}\) and \(u_{2}\).
$BR
$BR
\(d=\) \{ans_rule(10)\}

END_TEXT

ANS(num_cmp($dist));

ENDDOCUMENT();       # This should be the last executable line in the problem.